// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UsersForm component form testing: Render with snapshot 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction] {
        "calls": Array [
          Array [
            [Function],
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <HashRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <UsersForm>
        <div
          className="row"
        >
          <div
            className="col-4"
            key="32rfe232gh"
          >
            <Component
              fullName={
                <Tooltip
                  isDarkTheme={false}
                  textInfo="32rfe232gh"
                >
                  <Link
                    to="/user/32rfe232gh"
                  >
                    commons.userAppeal.male. Ferdinand Ellington
                  </Link>
                </Tooltip>
              }
              imageURL="url"
            >
              <div
                className="card-user "
              >
                <div
                  className="card-user__image"
                >
                  <img
                    alt="img"
                    src="url"
                  />
                </div>
                <div
                  className="card-user__text "
                >
                  <Tooltip
                    isDarkTheme={false}
                    textInfo="32rfe232gh"
                  >
                    <div
                      className="tooltip"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                    >
                      <Link
                        to="/user/32rfe232gh"
                      >
                        <LinkAnchor
                          href="#/user/32rfe232gh"
                          navigate={[Function]}
                        >
                          <a
                            href="#/user/32rfe232gh"
                            onClick={[Function]}
                          >
                            commons.userAppeal.male. Ferdinand Ellington
                          </a>
                        </LinkAnchor>
                      </Link>
                    </div>
                  </Tooltip>
                </div>
              </div>
            </Component>
          </div>
        </div>
        <div
          className="row row__justify_end"
        >
          <PaginationWrapper
            current={1}
            isDarkTheme={false}
            onChange={[Function]}
            pageSize={5}
            total={1}
          >
            <Pagination
              className="pagination-wrapper "
              current={1}
              onChange={[Function]}
              pageSize={5}
              showSizeChanger={false}
              total={1}
            >
              <LocaleReceiver
                componentName="Pagination"
                defaultLocale={
                  Object {
                    "items_per_page": "/ page",
                    "jump_to": "Go to",
                    "jump_to_confirm": "confirm",
                    "next_3": "Next 3 Pages",
                    "next_5": "Next 5 Pages",
                    "next_page": "Next Page",
                    "page": "",
                    "prev_3": "Previous 3 Pages",
                    "prev_5": "Previous 5 Pages",
                    "prev_page": "Previous Page",
                  }
                }
              >
                <Pagination
                  className="pagination-wrapper "
                  current={1}
                  defaultCurrent={1}
                  defaultPageSize={10}
                  hideOnSinglePage={false}
                  itemRender={[Function]}
                  jumpNextIcon={
                    <a
                      className="ant-pagination-item-link"
                    >
                      <div
                        className="ant-pagination-item-container"
                      >
                        <ForwardRef(DoubleRightOutlined)
                          className="ant-pagination-item-link-icon"
                        />
                        <span
                          className="ant-pagination-item-ellipsis"
                        >
                          •••
                        </span>
                      </div>
                    </a>
                  }
                  jumpPrevIcon={
                    <a
                      className="ant-pagination-item-link"
                    >
                      <div
                        className="ant-pagination-item-container"
                      >
                        <ForwardRef(DoubleLeftOutlined)
                          className="ant-pagination-item-link-icon"
                        />
                        <span
                          className="ant-pagination-item-ellipsis"
                        >
                          •••
                        </span>
                      </div>
                    </a>
                  }
                  locale={
                    Object {
                      "items_per_page": "/ page",
                      "jump_to": "Go to",
                      "jump_to_confirm": "confirm",
                      "next_3": "Next 3 Pages",
                      "next_5": "Next 5 Pages",
                      "next_page": "Next Page",
                      "page": "",
                      "prev_3": "Previous 3 Pages",
                      "prev_5": "Previous 5 Pages",
                      "prev_page": "Previous Page",
                    }
                  }
                  nextIcon={
                    <button
                      className="ant-pagination-item-link"
                      tabIndex={-1}
                      type="button"
                    >
                      <ForwardRef(RightOutlined) />
                    </button>
                  }
                  onChange={[Function]}
                  onShowSizeChange={[Function]}
                  pageSize={5}
                  prefixCls="ant-pagination"
                  prevIcon={
                    <button
                      className="ant-pagination-item-link"
                      tabIndex={-1}
                      type="button"
                    >
                      <ForwardRef(LeftOutlined) />
                    </button>
                  }
                  selectComponentClass={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "OptGroup": [Function],
                      "Option": [Function],
                      "SECRET_COMBOBOX_MODE_DO_NOT_USE": "SECRET_COMBOBOX_MODE_DO_NOT_USE",
                      "render": [Function],
                    }
                  }
                  selectPrefixCls="ant-select"
                  showLessItems={false}
                  showPrevNextJumpers={true}
                  showQuickJumper={false}
                  showSizeChanger={false}
                  showTitle={true}
                  style={Object {}}
                  total={1}
                  totalBoundaryShowSizeChanger={50}
                >
                  <ul
                    className="ant-pagination pagination-wrapper "
                    style={Object {}}
                    unselectable="unselectable"
                  >
                    <li
                      aria-disabled={true}
                      className="ant-pagination-prev ant-pagination-disabled"
                      onClick={[Function]}
                      onKeyPress={[Function]}
                      tabIndex={null}
                      title="Previous Page"
                    >
                      <button
                        className="ant-pagination-item-link"
                        disabled={true}
                        tabIndex={-1}
                        type="button"
                      >
                        <ForwardRef(LeftOutlined)>
                          <AntdIcon
                            icon={
                              Object {
                                "icon": Object {
                                  "attrs": Object {
                                    "focusable": "false",
                                    "viewBox": "64 64 896 896",
                                  },
                                  "children": Array [
                                    Object {
                                      "attrs": Object {
                                        "d": "M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z",
                                      },
                                      "tag": "path",
                                    },
                                  ],
                                  "tag": "svg",
                                },
                                "name": "left",
                                "theme": "outlined",
                              }
                            }
                          >
                            <span
                              aria-label="left"
                              className="anticon anticon-left"
                              role="img"
                            >
                              <IconReact
                                icon={
                                  Object {
                                    "icon": Object {
                                      "attrs": Object {
                                        "focusable": "false",
                                        "viewBox": "64 64 896 896",
                                      },
                                      "children": Array [
                                        Object {
                                          "attrs": Object {
                                            "d": "M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z",
                                          },
                                          "tag": "path",
                                        },
                                      ],
                                      "tag": "svg",
                                    },
                                    "name": "left",
                                    "theme": "outlined",
                                  }
                                }
                              >
                                <svg
                                  aria-hidden="true"
                                  data-icon="left"
                                  fill="currentColor"
                                  focusable="false"
                                  height="1em"
                                  key="svg-left"
                                  viewBox="64 64 896 896"
                                  width="1em"
                                >
                                  <path
                                    d="M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z"
                                    key="svg-left-svg-0"
                                  />
                                </svg>
                              </IconReact>
                            </span>
                          </AntdIcon>
                        </ForwardRef(LeftOutlined)>
                      </button>
                    </li>
                    <Pager
                      active={true}
                      itemRender={[Function]}
                      key="1"
                      locale={
                        Object {
                          "items_per_page": "/ page",
                          "jump_to": "Go to",
                          "jump_to_confirm": "confirm",
                          "next_3": "Next 3 Pages",
                          "next_5": "Next 5 Pages",
                          "next_page": "Next Page",
                          "page": "",
                          "prev_3": "Previous 3 Pages",
                          "prev_5": "Previous 5 Pages",
                          "prev_page": "Previous Page",
                        }
                      }
                      onClick={[Function]}
                      onKeyPress={[Function]}
                      page={1}
                      rootPrefixCls="ant-pagination"
                      showTitle={true}
                    >
                      <li
                        className="ant-pagination-item ant-pagination-item-1 ant-pagination-item-active"
                        onClick={[Function]}
                        onKeyPress={[Function]}
                        tabIndex="0"
                        title={1}
                      >
                        <a
                          rel="nofollow"
                        >
                          1
                        </a>
                      </li>
                    </Pager>
                    <li
                      aria-disabled={true}
                      className="ant-pagination-next ant-pagination-disabled"
                      onClick={[Function]}
                      onKeyPress={[Function]}
                      tabIndex={null}
                      title="Next Page"
                    >
                      <button
                        className="ant-pagination-item-link"
                        disabled={true}
                        tabIndex={-1}
                        type="button"
                      >
                        <ForwardRef(RightOutlined)>
                          <AntdIcon
                            icon={
                              Object {
                                "icon": Object {
                                  "attrs": Object {
                                    "focusable": "false",
                                    "viewBox": "64 64 896 896",
                                  },
                                  "children": Array [
                                    Object {
                                      "attrs": Object {
                                        "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                      },
                                      "tag": "path",
                                    },
                                  ],
                                  "tag": "svg",
                                },
                                "name": "right",
                                "theme": "outlined",
                              }
                            }
                          >
                            <span
                              aria-label="right"
                              className="anticon anticon-right"
                              role="img"
                            >
                              <IconReact
                                icon={
                                  Object {
                                    "icon": Object {
                                      "attrs": Object {
                                        "focusable": "false",
                                        "viewBox": "64 64 896 896",
                                      },
                                      "children": Array [
                                        Object {
                                          "attrs": Object {
                                            "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                          },
                                          "tag": "path",
                                        },
                                      ],
                                      "tag": "svg",
                                    },
                                    "name": "right",
                                    "theme": "outlined",
                                  }
                                }
                              >
                                <svg
                                  aria-hidden="true"
                                  data-icon="right"
                                  fill="currentColor"
                                  focusable="false"
                                  height="1em"
                                  key="svg-right"
                                  viewBox="64 64 896 896"
                                  width="1em"
                                >
                                  <path
                                    d="M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"
                                    key="svg-right-svg-0"
                                  />
                                </svg>
                              </IconReact>
                            </span>
                          </AntdIcon>
                        </ForwardRef(RightOutlined)>
                      </button>
                    </li>
                    <Options
                      changeSize={null}
                      current={1}
                      goButton={false}
                      locale={
                        Object {
                          "items_per_page": "/ page",
                          "jump_to": "Go to",
                          "jump_to_confirm": "confirm",
                          "next_3": "Next 3 Pages",
                          "next_5": "Next 5 Pages",
                          "next_page": "Next Page",
                          "page": "",
                          "prev_3": "Previous 3 Pages",
                          "prev_5": "Previous 5 Pages",
                          "prev_page": "Previous Page",
                        }
                      }
                      pageSize={5}
                      pageSizeOptions={
                        Array [
                          "10",
                          "20",
                          "50",
                          "100",
                        ]
                      }
                      quickGo={null}
                      rootPrefixCls="ant-pagination"
                      selectComponentClass={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "OptGroup": [Function],
                          "Option": [Function],
                          "SECRET_COMBOBOX_MODE_DO_NOT_USE": "SECRET_COMBOBOX_MODE_DO_NOT_USE",
                          "render": [Function],
                        }
                      }
                      selectPrefixCls="ant-select"
                    />
                  </ul>
                </Pagination>
              </LocaleReceiver>
            </Pagination>
          </PaginationWrapper>
        </div>
      </UsersForm>
    </Router>
  </HashRouter>
</Provider>
`;
